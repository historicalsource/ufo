	.TITLE UFO MID-WEST F.T.
	.ASECT
	.RADIX 10
.H=0
.J=1
.K=2
.L=3
.M=4
.N=5
.P=6
.R=7
.S=8
.T=9
.U=10
.V=11
.W=12
.X=13
.Y=14
.Z=15
	.RADIX 16
	;** WALL-GAME:  UFO
	;** USES 6502

	;***********************************************************************
	;** NOTE: CLEAR CATHODE REGS.(COLUMNS), THEN CHANGE ANODE (ROW) SELECTION,
	;**       THEN AND ONLY THEN OUTPUT NEW DATA TO CATHODE (COLUMNS) REGISTERS
	;********************
	;** NOTE: THIS IS A MUST ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	;***********************************************************************

	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	;^^ RAM: 0-7F, 80-FF
	;^^ A6532:
	;^^	DATA(A): 0800	BIT0-4:AUDIO 0-4,BIT5-N/A,BIT5-6:OPTION, BIT7:RADIO
	;^^	DDR(A):  0801	INIT. PATTERN=0F
	;^^	DATA(B): 0802	COLUMN DRIVERS (CATHODES) 1-8, BIT 7-0,RESPECTIVELY
	;^^	DDR(B):  0803	INIT. PATTERN= FF
	;^^	PA0-0=>NOISE SOURCE ENABLED
	;^^	PA1-1=>UFO/0=>EXPLOSION
	;^^	PA2-0=>SCORE BLEEPER
	;^^	PA3-1=>RESET/0=>LASER
	;^^	PA4-1=>>ATTRACT/0=>SOUNDS
	;^^	WRITE TIMER:
	;^^		1T- 814		;BIT3 =1 (I.E. 81C) ENABLE INT.FROM TIMER
	;^^		8T- 815
	;^^		64T-816
	;^^		1024T- 817
	;^^	READ TIMER: 804
	;^^	WRITE EDGE DETECT:
	;^^		DISABLE EDGE DETECT: 804,5
	;^^		NEG PA7: 806
	;^^		POS PA7: 807
	;^^ B6532:
	;^^	DATA(A): 880	BIT0-3:ROW DRIVERS(ANODES),BIT4-5:OPTION,BIT6:TEST,BIT7:COIN
	;^^	DDR(A):  881	INIT. PATTERN= 0F
	;^^	DATA(B): 882	COL. DRIVERS(CATHODES) 1-8, BITS 7-0,RESPECTIVELY
	;^^	DDR(B):  883	INIT. PATTERN= FF
	;^^	WRITE TIMER:
	;^^		1T- 894
	;^^		8T- 895
	;^^		64T- 896
	;^^		1024T- 897
	;^^	READ TIMER: 884
	;^^	WRITE EDGE DETECT:
	;^^		DISABLE EDGE DETECT: 884,5
	;^^		NEG PA7: 886
	;^^		POS PA7: 887
	;^^ WATCHDOG RESET: 1000
	;^^ RADIO:  2000 BITS 0-3 (0-2 USED); BITS 4&5 FREE GAME BONUS
	;^^ PROGRAM: 3000-3FFF
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	;**************************************************
	;** COIN ROUTINE REQUIRES LEAD OF 33 MSEC OF NO
	;** COIN PRESENT, THEN 16 MSEC OF VALID COIN
	;** FOLLOWED BY 33 MSEC OF NO COIN PRESENT
	;** 16 MSEC = COUNT OF 19. = APPR. 15.58 MSEC
	;** 33 MSEC = COUNT OF 40. = APPR. 32.8 MSEC
	;**************************************************

	
	.MACRO LPAIR .A,.B
	.IF NB,.A
	.IF B,.B
	.BYTE .A
	.IFF
	..1=.A*2 + <^D'.B-1/8.> *8
	..2=^D'.B-1 & 7
	.BYTE ..1+..2
	.ENDC
	.ENDC
	.ENDM

	.MACRO ROUTE .1,.2,.3,.4,.5,.6,.7,.8,.9,.10
	.IRP X <<'.1,.2'>,<'.3,.4'>,<'.5,.6'>,<'.7,.8'>,<'.9,.10'>>
	LPAIR X
	.ENDM
	.ENDM


;ZERO PAGE NOT INITIALLY CLEARED ABOVE ADDRESS 008C
	.=0000
ARRAY:	.BLKB 32.	;MATRIX STORAGE AND WORK SPACE
LMPTST:	.BLKB 1		;LAMP TEST FLAG
SHOLD:	.BLKB 1		;DATA HOLD ONLY FOR CSTRNG,SSTRNG,STRNG ROUTINE
HOLD:	.BLKB 2		;HOLD FLAG & COUNT
TSTCNT:	.BLKB 1		;COUNT FOR SOFTWARE WATCHDOG
ROW:	.BLKB 1		;ROW # (ANODE SELECTION),CURRENT
BITFLG:	.BLKB 1		;SET/C/R-BIT FLAG USED ONLY BY SET/C/R BIT
SPLDZ1:	.BLKB 1
SPLDZ2:	.BLKB 1
LRTC:	.BLKB 1		;REAL TIME CLOCK LOWER HALF
URTC:	.BLKB 1		;REAL TIME CLOCK UPPER HALF
CKSMER:			;HOLD CHECKSUM RESULTS
TPTR:	.BLKB 2		;POINTER TO TRACK ROUTE LIST
CKADDR:			;CHECKSUM ADDRESS POINTER
LPTR:	.BLKB 2		;TEMPORARY LASER ROUTE POINTER
AUDIO:	.BLKB 1		;AUDIO STATUS
NXROOT:	.BLKB 1		;HOLDS RANDOM NUMBER FOR SELECTIONG NEXT TARGET ROUTE
POLYH:	.BLKB 1
SWTFLG:	.BLKB 1		;FLAG FOR SWITCH ENABLE EDGE
SWITCH:	.BLKB 3		;SWITCH COUNT FLAG
OLD1:	.BLKB 1		;INDEX FOR LASER 1 LIST
CKCYCL:			;HOLD CHECKSUM CYCLE COUNT
OLD2:	.BLKB 1		;INDEX FOR LASER 2 LIST
CKMSK:			;HOLD CHECKSUM ERROR MASK
OLD3:	.BLKB 1		;INDEX FOR LASER 3 LIST
PTR:	.BLKB 1		;INDEX: NEW FOR ROUTE LIST
TLASON:			;USED DURING LAMP TEST FOR LASER SOUND
NEW1:	.BLKB 1		;INDEX: NEW FOR LASER 1 LIST
LASDEL:			; UQED DURING LAMP UM”U FGR LASER SOUND
NEW2:	.BLKB 1		;INDEX: NEW FOR LASER 2 LIST
TTYM:			;USED DURING TEST AS FLAG FOR IRQ TIMER "OK"
NEW3:	.BLKB 1		;INDEX: NEW FOR LASER 3 LIST
PTRS:	.BLKB 1
PTRS1:	.BLKB 1
PTRS2:	.BLKB 1
CLRF1:	.BLKB 1		;CLEAR STRING FLAG FOR LASER 1
CLRF2:	.BLKB 1		;CLEAR STRING FLAG FOR LASER 2
CLRF3:	.BLKB 1		;CLEAR STRING FLAG FOR LASER 3
TFLG:	.BLKB 1		;TIMER FLAG
SPTR:	.BLKB 2		;SET/CLR/SPEC INDIRECT STRING POINTER
HSCOR1:	.BLKB 1		;7= UPPER DIGIT PLAYER 1 SCORE, 6=1=> ACTIVE PLAYER 1
;<<<<<<<<<<<<<<<<<<<<<<<<<<< NEXT 11 MUST BE KEPT IN THIS ORDER >>>>>>>>>>>>>>>>
HSCOR2:	.BLKB 1		;7= UPPER DIGIT PLAYER 2 SCORE
SCOR1:	.BLKB 1		;PLAYER 1 SCORE (BCD)
SCOR2:	.BLKB 1		;PLAYER 2 SCORE (BCD)
TSCOR1:	.BLKB 1
TSCOR2:	.BLKB 1
LACT1:	.BLKB 1		;7=1=> LASER 1 ACTIVE,6=1=> LASER 1 TRIG. ACTIVE
LACT2:	.BLKB 1		;7=1=> LASER 2 ACTIVE,6=1=> LASER 2 TRIG. ACTIVE
LACT3:	.BLKB 1		;7=1=> LASER 3 ACTIVE,6=1=> LASER 3 TRIG. ACTIVE
BLINKP:	.BLKB 1		;BLINK CONTROL FOR PLAYER CREDIT INDICATION
BONFLG:	.BLKB 1
TVCNT:	.BLKB 2
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
TACT:	.BLKB 1		;BIT7=1=TARGET ACTIVE, BIT6=1=EXPLOSION ACTIVE
EXTYM:	.BLKB 1		;EXPLOSION TIMER
RSHOTS:	.BLKB 1		;REMAINING SHOT COUNT
TVAL:	.BLKB 1		;CURRENT TARGET VALUE
LSTEP1:	.BLKB 1		;BIT 7=1=>DEC COUNT, BIT 6=1=>STEP LASER 1
LSTEP2:	.BLKB 1		;7=1=>DEC COUNT, 6=1=>STEP LASER 2
LSTEP3:	.BLKB 1		;7=1=>DEC COUNT, 6=1=>STEP LASER 3
ROOT:	.BLKB 1		;CURRENT TARGET ROUTE NUMBER
LGNUM:	.BLKB 1		;LASER HIT CONTROL WORD
STAR11:	.BLKB 1
STAR12:	.BLKB 1
SYDEGN:	.BLKB 1		;CURRENT WEIGHT FACTOR FOR SIDE GUN ROUTE SELECTION
R0:	.BLKB 1		;TEMP WORKING CELL
R1:	.BLKB 1
ATRACT:	.BLKB 1		;ATTRACT MODE FLAG: BIT 7=1=>ATTRACT, BIT 6=1=> SINGLE PLAYER GAME
GLOP:	.BLKB 1		;GAME LOOP COUNTER
G1:	.BLKB 1
G2:	.BLKB 1
HIT1:	.BLKB 1
HIT2:	.BLKB 1
EXNUM1:	.BLKB 1		;HOLDS EXPLOSION STRING #
EXNUM2:	.BLKB 1
TARPOS:	.BLKB 1		;HOLD CURRENT POSITION #
TPOSB:	.BLKB 1		;HOLD 2ND LAMP #, IF NEEDED
TARSTP:	.BLKB 1
STRSTP:	.BLKB 1
TSTWRD:	.BLKB 1
COYN:	.BLKB 1		;COIN STATUS WORD: BIT7=1=>PRE ZERO, BIT6=1=>COIN FOUND
CREDIT:	.BLKB 1
ONE:	.BLKB 1		;HOLDS 1'S COUNT
ZERO:	.BLKB 1		;HOLDS 0'S COUNT
;<<<<<<<<<<<<<<<<<<<<<<<< NEXT 5 LABELS MUST BE KEPT IN THIS ORDER >>>>>>>>>>>>>
REDYTM:	.BLKB 1
PIBLNK:	.BLKB 1
GTYME:	.BLKB 1		;GAME START DELAY TIMER: SINGLE PLAYER ONLY
GMRCNT:	.BLKB 1		;BLINK CONTROL FOR GAME OVER INDICATION
ONTYME:	.BLKB 1		;SCORES ON TIMER (ATTRACT)
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
TENCNT:	.BLKB 1		;USED FOR BONUS SOUND COUNT
HITNUM:	.BLKB 1		;HOLDS HIT COUNT FOR BONUS FUNCTION
SETFLG:	.BLKB 1
SCRSND:	.BLKB 1
LFIRE:	.BLKB 1		;LASER FIRE SOUND FLAG
GMRON:	.BLKB 1		;HOLDS STATE OF "GAME OVER" LIGHTS, NEG => ON
EXEN1:	.BLKB 1
EXEN2:	.BLKB 1
EXEN3:	.BLKB 1
FLFLG:	.BLKB 1		;USED AS DOUBLE FIRE LASER FLAG
FREE:	.BLKB 1		;FLAG FOR REMEMBERING THAT THIS A FREE GAME SO NO WIN THIS TIME.
			;BIT 7 SAYS DO BONUS THING AT GAME END, BIT 6 IS FLAG FOR NEXT TURN
;<<<<<<<<<<<<NEXT 9 LABELS MUST STAY IN THIS ORDER >>>>>>>>>>>>>>>>>>>>>>>>>>
READY:	.BLKB 1		;READY FLAG - BIT 6, 1=>
SCRVAL:	.BLKB 1		;CURRENT SCORE POINTS
TERM:	.BLKB 1		;TERMINATE PLAYER'S TURN FLAG
P1TARG:	.BLKB 2
WRAP:	.Fﬂ•æãˆOê∑⁄˘nÆ>=÷4bœO∏Ú◊‡¸„èïrÒ¡”«”…—˙xºæ/+WRAPS(2000+)
THSCR1:	.BLKB 2		;TEMP HOLDING OF HSCOR1 & 2
HIGHS:	.BLKB 2		;HOLD TOTAL COUNT OF SCORES
HIGHSC:	.BLKB 2		;SAME AS ABOVE^^^^^^^^^^^^^
PEON:	.BLKB 2		;BLINK PLAYER CONTROL FLAG
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
;^^ I/O ADDRESS ASSIGNMENTS

TSIT64=816
RSIT64=805
TNIT8=895
MEASUR=816
CLRITI=804
LEADIN=81E
CPOS=805
EPOS=807
ENEG=806
WDOG=1000
BPA=880
BPB=882
APB=802
RNMIT=885
NMIT=89D		;SET I.T. INTERRUPT ON TIME-OUT (NMI) 8T
BTNTA=81D		;SET I.T. INTERRUPT ON TIME-OUT (IRQ) 8T
BTNT=81E		;SET I.T. INTERRUPT ON TIME-OUT (IRQ) 64T
ANODE=880		;BIT0-3,OUTPUT
OPTA=800		;BIT4,5
OPTB=880		;BIT4,5
;<<<<<<<< NEXT 5 ASSIGNMENTS CHANGE FOR FINAL SWITCH CODES >>>>>>>>>>>>>>>>>>>>>
RADIO=2000		;BITS 0-2
A.A=3			;LEFT, BIT 2
B.B=5			;CENTER, BIT 1
C.C=6			;RIGHT, BIT 0
D.D=7			;BIT MASK FOR SWITCH WORD (RADIO)
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
COIN=880		;BIT7
TESTSW=880		;BIT6
AUD=800			;BIT0-4,OUTPUT
COL1=802		;BIT7-0,OUTPUT
COL9=882		;BIT7-0,OUTPUT
BDDRB=0883		;DATA DIRECTION REGISTER B SIDE B6532
BDDRA=0881		;  "      "         "    A   "    "
ADDRA=801
ADDRB=803
EANODE=1800		;WRITE ONLY TO ENABLE THE ANODE DECODERS
;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
;^^CONSTANTS:
LEEDEL=78.		;78 COUNTS(/64)= APPR. 5 MSEC LEADIN DELAY TIME
BPATT=80
NTYME=100.		;1/16 OF 12.5 MSEC FOR BOTH 50 & 60 HZ.
HSAMP=56.
SAMP=78.
SWAIT=-40.		; THIS NUMBER TIMES 250 MSEC. = WAIT TIME
EX0=0
EX1=2
EX2=4
EX3=6
EX4=8
EX5=0A
EX6=0C
GMVR=0E
PANEL1=10
PANEL2=12
PL1=14
PL2=16
REDI=18
BONIS=1A
TZ0=1C
TDIGIT=1E
SDIGIT=20
P1M=22
P1L=24
P2M=26
P2L=28
PZ1=2A
PZ2=2C
P1H=2E
P2H=30
BDLOWL=7F
BADLOW=0FF
;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

;REMOVE FOR STAND-ALONE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	.=2800
	LDA I,NMI&0FF
	STA A,0F42A
	LDA I,NMI&0FF00/100
	STA A,0F42B
	LDA I,IRQ&0FF
	STA A,0F42C
	LDA I,IRQ&0FF00/100
	STA A,0F42D
	JMP START

	.=3000
CK1:	.BYTE 0		;CHECKSUM FOR 1ST 1K BLOCK
MAYN:	LDA I,16.	;RESET SOFTWARE WATCHDOG TIMER
	STA TSTCNT
	LDA I,1C	;SET-UP AUDIO WORD AS ALL SOUNDS OFF
	STA AUDIO
	LDA I,0FE
	STA STAR11
	STA PTRS	;INIT STARFIELD (4)
	LDA I,80	;SET ATTRACT MODE
	STA ATRACT
	JSR CLRINT	;CLEAR SWITCH INTERRUPTS
ATTMOD:	LDA I,0FB
	STA STAR12
	STA GMRON
	LDA NXROOT		;INIT. TARGET RUN FOR ATTRACT MODE
	AND I,7
	JSR TARSET
	STY PTR
	JSR SETTAR
ATMODE:	BIT A,TESTSW
	BVC 4$
	JMP NMIA		;STOP NMI AND WAIT FOR WATCHDOG RESET
4$:	LDA I,80
	STA TSTWRD
	JSR COINRT	;CHECK FOR COINS
	LDA ONTYME
	BMI 5$
	BNE 5$
	INC ONTYME
	STA HSCOR1
	STA HSCOR2
	LDA I,0BB	;BLANK SCORES
	STA SCOR1
	STA SCOR2
5$:	BIT ATRACT
	BMI 1$
	BIT GTYME
	BMI 2$
	JMP ATOVR
2$:	BIT LACT3
	BVC ATMODE
	LDA I,0
	STA LACT3
	STA LACT2
	STA LACT1
	LDA CREDIT
	CMP I,2
	BCC ATMODE
	DEC CREDIT
	DEC CREDIT
	JMP STRT2
1$:	LDA A,OPTB	;CHECK FOR FREE PLAY
	AND I,30
	CMP I,30
	BEQ 3$		;YES,MOVE STARS
	LDA CREDIT
	BNE LOOK	;NO STARS MOVE IF CREDIT PRESENT
3$:	LDA STRSTP
	BNE ATAR
	LDA I,7F
	STA STRSTP
	JSR STARS
ATAR:	LDA TARSTP
	BNE LOOK
	LDA I,0C0
	STA TARSTP
	JSR TARGET
LOOK:	LDA LRTC
	AND I,3F	;TIME 1
	CMP I,1
	BNE 2$
	LDA CREDIT
	LSR
	CMP I,9
	BCC 1$
	LDA I,9
1$:	TAX
	LDY I,SDIGIT
	JSR DGOUT	;DISPLAY # OF CREDITS
	JMP ATMODE
2$:	LDY I,GMVR	;"GAME OVER" STRING
	BIT GMRCNT
	BMI 4$
	LDA I,0FE
	STA GMRCNT
15$:	LDA GMRON
	JSR STRNG	;GAME OVER ON
	BIT PEON+1
	BPL 11$
	LDY I,PL2	;"PLAYER 2" ON
	LDA GMRON
	JSR STRNG
11$:	BIT PEON
	BPL 3$
	LDY I,PL1	;"PLAYER 1" ON
	LDA GMRON
	JSR STRNG
3$:	LDA GMRON
	EOR I,0FF
	STA GMRON
	LDX HIGHS
	BIT ONTYME
	BPL 4$
	BIT GMRON
	BMI 12$
	LDA ZX,TSCOR1
	STA ZX,SCOR1
	LDA ZX,THSCR1
	STA ZX,HSCOR1
	JMP 4$
12$:	TXA			;BLINK OFF
	STA ZX,HSCOR1
	LDA I,0BB
	STA ZX,SCOR1
4$:	JSR SCRUP
	LDA A,OPTB
	AND I,30
	CMP I,30	;FREE PLAY?
	BNE 5$		;NO
	LDA I,4
	STA CREDIT
5$:	LDA CREDIT
	BNE 9$
	STA SWTFLG
	JSR CLRINT
	JMP ATMODE
9$:	BIT SWTFLG
	BMI 10$
	JSR CLRINT
	JSR STRTIN	;SET SWITCH READ
	LDA I,80
	STA SWTFLG
10$:	LDA I,0
	LDX I,80
	BIT LACT3	;START TWO?
	BVC 20$
	JMP STRT2P	;MAYBE
20$:	BIT LACT1	;START SINGLE?
	BVS STRT1P	;MAYBE
	LDA CREDIT
	CMP I,4
	BCS 6$		;CREDIT >=4
	CMP I,2		;CREDIT < 4
	BCS 7$		;CREDIT >= 2
8$:	JMP ATMODE
6$:	STX PEON+1
7$:	STX PEON	;BLINK "PLAYER 1"
	JMP ATMODE
STRT1P:	STA LACT1
	STA LACT2
	SEC
	LDA CREDIT
	SBC I,2
	BCS 1$		;ENOUGH FOR 1 PLAYER, AT LEAST
	JMP ATMODE	;NOT ENOUGH FOR 1 PLAYER
1$:	STA CREDIT
	CMP I,2
	BCC 2$
	LDA I,-10.
2$:	STA GTYME
	LDA I,40
GAMEON:	STA ATRACT
	LDY I,GMVR	;"GAME OVER" OFF
	JSR CSTRNG
	LDA CREDIT
	LSR
	TAX
	LDY I,SDIGIT
	JSR DGOUT	;DISPLAY CREDIT LEFT
	JMP ATMODE
STRT2P:	STA GTYME
	STA LACT3
	STA LACT2
	SEC
	LDA CREDIT
	SBC I,4		;ENOUGH CREDIT FOR 2 PLAYERS?
	BCS 1$		;YES
	JMP ATMODE	;NO
1$:	STA CREDIT
STRT2:	LDA I,0
	BEQ GAMEON
ATOVR:	LDY PTR
	JSR CLRTAR	;CLEAR TARGET PICTURE
	LDA I,40	;SET PLAYER 1 ACTIVE
	STA HSCOR1
	LDA I,0
	LDX I,7
3$:	STA ZX,HSCOR2
	DEX
	BPL 3$
	LDY I,PL1
	JSR SSTRNG
	LDY I,PL2
	JSR CSTRNG
	LDY I,GMVR	;"GAME OVER" OFF
	JSR CSTRNG
	LDA I,0BB	;BLANK CODE TO A
	BIT ATRACT
	BVC 1$
	STA SCOR2	;P1 ON, P2 OFF
1$:	LDX I,3		;SET GAME LOOP COUNT
	LDA A,OPTA	;TEST LONG OR SHORT GAME
	AND I,20
	BEQ 2$		;SHORT GAME
	LDX I,5		;LONG GAME
2$:	STX GLOP
	LDA I,0
	LDX I,0E
4$:	STA ZX,READY
	DEX
	BPL 4$
	JSR SCRUP
LOOP:	JSR COINRT	;CHECK FOR COINS
	BIT TERM
	BMI LOOPA
	BIT READY
	BVS LOOPA
	BIT REDYTM
	BMI LOOPA
	BIT SWTFLG
	BMI 5$
	JSR CLRINT
	JSR STRTIN	;SET SWITCH READ
	LDA I,80
	STA SWTFLG
5$:	BIT LACT2
	BVC 1$
	LDX I,6
	LDA I,0
6$:	STA ZX,LACT1
	DEX
	BPL 6$
	LDA I,-5	;SET HIT NUMBER TO -5
	STA HITNUM
	LDX I,9		;SET-UP FOR 9 SHOTS
	STX RSHOTS
	JSR DISSHT	;DISPLAY SHOTS LEFT
	JSR PXYSET
	LDA AY,TVUPDA
	STA TVCNT+1
	LDA AY,TVSTRT
	STA TVAL
	TAX
	JSR TVDISP	;DISPLAY HIT VALUE
	LDA I,40
	STA READY	;SET READY FLAG
	BNE 3$		;TURN OFF SIGN
1$:	LDY I,REDI	;SET POINTER TO READY STRING
	JSR SSTRNG	;READY SIGN ON
	BMI LOOPA
3$:	LDY I,REDI	;SET FOR READY STRING
	JSR CSTRNG	;READY SIGN OFF
;<<<<<<<<<<<<<<<<<<<<<<<< PLAY TERMINATION OPS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LOOPA:	LDA I,80
	STA TSTWRD
	BIT TERM	;TEST FOR PLAY TERMINATION
	BMI 10$
	JMP LP1		;NOT TIME
10$:	JSR CLRINT	;SWITCHES OFF
	LDA I,0
	STA SWTFLG
	LDA LACT1
	ORA LACT2
	ORA LACT3
	BPL 11$
	JMP LP1
11$:	LDA SCRVAL		;TEST FOR REMAINING SCORE UPDATE
	BEQ 13$
	JMP LP1
13$:	BIT BONFLG	;ALL 5 HITS MADE?
	BVC 7$		;NO
	LDY I,0		;ALL SOUND OFF
	JSR SNDHDL
	LDA I,80
	STA BONFLG
	STA HITNUM
	STA READY	;CLEAR READY
	LDA I,1
	JSR PXYSET
	STA ZX,P1TARG
	LDA I,30.	;COUNT FOR FREE GAME SOUND
	BIT FREE
	BMI 9$
	LDA I,10	;ADDITIONAL 100 POINTS
9$:	STA SCRVAL
	JMP LP1
7$:	LDA I,-10.	;SET TIME DELAY FOR READY BUTTON
	BIT ATRACT
	BVC 1$
	LDA I,-4
1$:	STA REDYTM
	LDY I,BONIS	;CLEAR BONUS LIGHTS, IN CASE
	JSR CSTRNG
	BIT FREE
	BMI 12$
	BIT ATRACT
	BVS 6$		;SINGLE PLAYER GAME, YES
	BIT HSCOR1	;PLAYER 2?
	BVS 8$		;NO
6$:	DEC GLOP
	BNE 8$
	BIT FREE
	BVS 15$		;THIS WAS A FREE GAME
	LDA A,RADIO
	AND I,30
	BEQ 12$		;NO FREE SELECTED
	LSR
	LSR
	LSR
	LSR
	TAY
	DEY
	LDX I,1
16$:	LDA ZX,WRAP	;WRAPPED SCORE IS AUTO-FREE
	BMI 17$
	LDA ZX,HSCOR1	;MIN IS 1000+
	BPL 14$		;NOT
	LDA AY,FGTBL	;GET LEVEL VALUE
	CMP ZX,SCOR1
	BCS 14$		;NO FREE LEVEL REACHED
	LDA I,0BB
	CMP ZX,SCOR1
	BEQ 14$		;NO!!
17$:	INC CREDIT
	INC CREDIT
	LDA I,80
	STA FREE
	LSR
	STA BONFLG
14$:	DEX
	BPL 16$
	BIT FREE
	BPL 15$
	JMP 13$
15$:	LDA I,0
	STA FREE	;CLEAR FREE
12$:	LDA I,80	;SET ATTRACT MODE
	STA ATRACT
8$:	LDA I,0
	STA BONFLG
	STA TERM
	STA TACT		;UFO ACTIVE OFF
	TAY		;SOUNDS OFF
	JSR SNDHDL
	LDY PTR
	JSR CLRTAR	;CLEAR TARGET PICTURE
	LDY I,PANEL1		;CLEAR INSTRUMENT PANELS
	JSR CSTRNG
	LDY I,PANEL2
	JSR CSTRNG
	LDA HSCOR1
	BIT ATRACT	;TEST FOR SINGLE PLAYER GAME AND END OF GAME
	BMI 5$		;ATTRACT MODE SET? (END OF GAME?),YES
	BVS 3$		;YES, SET PLAYER 1 FLAG
	BIT HSCOR1
	BVS 2$
4$:	ORA I,40
	STA HSCOR1
	BNE 3$
2$:	AND I,80
	STA HSCOR1
3$:	JSR PLYRON
5$:	LDY I,0
	STY READY
	BIT ATRACT
	BPL LP1
;"END OF GAME" OPS !!!!!
	JSR SNDHDL	;SOUNDS OFF, ATTRACT
	LDY I,PL1	;CLEAR PLAYER LIGHTS
	JSR CSTRNG
	LDY I,PL2
	JSR CSTRNG
	LDA I,80	;SET TIME FOR 32 SEC
	STA ONTYME
	JSR SCRUP
	LDY I,TZ0
	JSR CSTRNG
	LDY I,TDIGIT
	JSR CSTRNG
	LDY I,SDIGIT	;CLEAR SHOTS LEFT
	JSR CSTRNG
	LSR FREE
TSCRT:
	LDX I,0
	SEC
	LDA HIGHS+1	;P2L
	SBC HIGHS	;P1L
	LDA HIGHSC+1	;P2H
	SBC HIGHSC	;P1H
	BCC 1$		;P1>P2
	INX		;P2>=P1
1$:	STX HIGHS
	JMP ATTMOD
LP1:	BIT READY		;FIRE BUTTON ACTIVE?
	BVC TLOP
	LDX I,2
1$:	LDA ZX,LACT1		;LASER ACTIVE?
	BPL 2$			;NO
	AND I,80		;YES, CLEAR TRIGGER FLAG
	STA ZX,LACT1
	BMI 3$
2$:	ASL			;TRIG. ACTIVE?
	BPL 3$			;NO
	JSR DSHOTS		;DECR. SHOT COUNT
	BCS 4$			;NO MORE SHOTS AVAILABLE,(A)=0 SO CLEAR ZX,LACT1
	LDA AX,LSTRTS		;RESET START INDEX
	STA ZX,NEW1
	LDA I,0F0
	STA ZX,LSTEP1
	STA LFIRE	;SET LASER FIRE SOUND FLAG
	JSR LASRST	;LASER SOUND RESET
	LDA I,80		;SET LASER ACTIVE
4$:	STA ZX,LACT1
3$:	DEX
	BPL 1$
TLOP:	LDX TVAL
	BNE 2$
	BIT READY
	BVC STARON
	LDY I,SDIGIT	;CLEAR MISSES COUNT
	JSR CSTRNG
	LDA I,80
	STA TERM
	BNE STARON
2$:	LDA TVCNT
	ORA TVCNT+1
	BNE STARON
	DEX
	STX TVAL
	JSR TVDISP
	JSR PXYSET
	LDA AY,TVUPDA
	STA TVCNT+1
STARON:	LDA STRSTP
	BNE BLINK
	LDA I,7F	;RESET STAR FIELD TIMER
	STA STRSTP
	JSR STARS
BLINK:	JSR COINRT	;CHECK FOR COINS
	BIT READY
	BVC 2$
	LDA LRTC
	AND I,3
	CMP I,2		;TIME 2
	BNE 2$
	BIT PIBLNK	;BLINK PLAYER INSTRUMENT LIGHTS WHEN READY WAIT
	BMI 2$
	LDA I,0FF
	STA PIBLNK
	LDY I,PANEL1		;P1 INSTRUMENTS
	BIT HSCOR1
	BVS 5$
	LDY I,PANEL2	;P2 INSTRUMENTS
5$:	LDA NXROOT
	AND I,3
	TAX
	LDA AX,BITPAN	;CAN ONLY TURN ON 1 LAMP IN PANELS
4$:	JSR STRNG
;TARGET OPERATIONS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
2$:	BIT READY
	BVC LAS		;READY NOT SET
	BIT TACT
	BMI 6$		;TARGET ALREADY ACTIVE
	BVS LAS		;TARGET EXPLODING
;<<<<<<<<<<<<<<<<<<<<<<<<<< INITIALIZE TARGET RUN>>>>>>>>>>>>>>>>>>>>>>>>>
	BIT TERM	;TERMINATED TURN?
	BMI LAS		;YES, DO NOT RESTART NEW TARGET
	LDA NXROOT
	AND I,7
	JSR SPCRT1	;TEST SELECTED NEW ROUTE AGAINST WEIGHTED ROUTES
	JSR TARSET	;INITIALIZE NEW TARGET RUN
	STY PTR		;SAVE NEW ROUTE INDEX
	LDY I,1		;UFO SOUND ON
	JSR SNDHDL
	LDA I,80
	STA TACT
	JSR PXYSET
	LDA AY,TSPCN
	STA TARSTP	;START STEP TIMER FOR TARGET
	LDY PTR		;GET NEW ROUTE INDEX
	JSR SETTAR	;TURN ON TARGET PICTURE
	JMP LAS
;<<<<<<<<<<<<<<<<<<<<<<<<<< STEP TARGET >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
6$:	LDA TARSTP
	BNE LAS
	JSR PXYSET
	LDA AY,TSPCN
	STA TARSTP	;RESET STEP TIMER
	JSR TARGET		;STEP TARGET
;<<<<<<<<<<<<<<<<<<<< LASER OPS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LAS:	BIT LFIRE
	BPL 3$
	LSR LFIRE
	JSR LASFYR	;FIRE LASER SOUND
3$:	LDX I,2
LAS1:	LDA ZX,LACT1
	BPL ELAS
	LDA ZX,LSTEP1
	BMI ELAS
	LDY I,0F0
	LDA ZX,CLRF1
	BEQ 4$
	LDY I,0F8
4$:	STY ZX,LSTEP1
	;X=LASER # TO BE STEPPED
LASER:	TXA
	ASL
	TAY
	LDA AY,GTBL
	STA LPTR
	LDA AY,GTBL+1
	STA LPTR+1
	LDA ZX,CLRF1	;SOLID STRING
	BEQ 6$
	ASL FLFLG
	BCC 2$
	JSR LASFYR		;FIRE LASER SOUND 2ND TIME
2$:	LDY ZX,OLD1
	BPL 7$
	LDA I,0
	STA ZX,EXEN1
	STA ZX,LACT1
	STA ZX,CLRF1
	BEQ ELAS
7$:	CPY I,6		;DISABLE STEP POINT
	BNE 5$
	LDA ZX,EXEN1	;CHECK FOR HIT MADE THIS LASER
	ASL
	BMI 1$		;HIT MADE, DON'T RESET HIT COUNT
	LDA I,-5	;MISSED, RESET HIT COUNT
	STA HITNUM
	LDA RSHOTS
	BNE 1$
	LDA I,80	;NO MORE SHOTS LEFT, SET TERMINATE FLAG
	STA TERM
1$:	LDA I,0
	STA ZX,EXEN1	;CLEAR HIT ENABLE
5$:	LDA NY,LPTR
	JSR CLRBIT
	DEC ZX,OLD1
	JMP ELAS
6$:	LDY ZX,NEW1
	BPL 8$
	LDA AX,LSTRTS
	STA ZX,OLD1
	LDA I,80
	STA FLFLG
	JSR LASRST	;RESET LASER SOUND
	INC ZX,CLRF1
	BNE ELAS
8$:	CPY I,1		;ENABLE HIT STEP POINT
	BNE 9$
	LDA I,80
	STA ZX,EXEN1	;SET HIT ENABLE
9$:	LDA NY,LPTR
	JSR SETBIT
	DEC ZX,NEW1
ELAS:	DEX
	BMI EXOPS
	JMP LAS1
RAN:
EXOPS:	LDA LRTC
	AND I,3
	CMP I,1		;TIME 1
	BNE RAN1
	BIT TACT
	BVC RAN1	;NOT
	BIT EXTYM	;EXPLOSION TIME-OUT
	BPL 1$
	LDY LGNUM	;FLASH EXP. LIGHTS
	LDA LRTC
	AND I,10
	BEQ 2$
	LDA NXROOT
	JSR STRNG	;FLASH EXPLOSION LAMPS
2$:	LDA LRTC
	AND I,3C
	BNE RAN1
	INC EXTYM
	BMI RAN1
1$:	LDY LGNUM	;CLEAR EXPLOSION LIGHTS
	JSR CSTRNG
	LDY I,5		;EXPLOSION SOUND OFF
	JSR SNDHDL
;^^^^^^^^^^^^^^^^^^ RE-ENABLE SWITCHES TO BE READ ^^^^^^^^^^^^^^^^^^^^^^^^^
	JSR CLRINT
	JSR STRTIN	;SET SWITCH READ
	LDA I,0
	STA TACT	;CLEARS EXPLOSION ACTIVE
RAN1:	JSR RAND	;UPDATE RANDOM NUMBER
HIT:	BIT TACT
	BPL NOTEST	;TEST FOR ACTIVE TARGET
	BVS NOTEST	;TEST FOR TARGET EXPLOSION ACTIVE
	LDX G1
	BMI NOTEST	;NO HIT POINT THIS ROUTE
	LDA ZX,EXEN1	;TEST HIT LASER ACTIVE
	BPL 2$		;NOT, CHECK 2ND HIT POSITION
	LDY EXNUM1	;HOLD EXPLOSION #
	LDA TARPOS	;GET CURRENT POSITION OF TARGET
	CMP HIT1	;TEST FOR HIT POSITION #1
	BEQ 3$		;GOT HIT 1
2$:	LDX G2
	LDA ZX,EXEN1	;TEST HIT LASER ACTIVE
	BPL NOTEST	;NOT
	LDY EXNUM2	;HOLD EXPLOSION #
	LDA TARPOS	;GET CURRENT POSITION OF TARGET
	CMP HIT2	;TEST FOR HIT POSITION #2
	BNE NOTEST	;NO
3$:	LDA I,40
	STA ZX,EXEN1	;CLEAR HIT ENABLE, SET HIT FLAG THIS LASER
	STY LGNUM	;SAVE EXPLOSION #
	INC HITNUM	;COUNT HIT FOR BONUS
	BMI 4$
	STA BONFLG	;SET BONUS "MADE" FLAG
4$:	LDA I,0FF
	STA G1		;CLEAR ACTIVE HIT POSITION
	LDA I,0E0
	STA EXTYM	;SET-UP EXPLOSION TIMER
	LDA I,40
	STA TACT	;SET EXP. ACTIVE FLAG
	TXA
	PHA
	LDY PTR		;CLEAR TARGET PICTURE
	JSR CLRTAR
	LDY LGNUM	;GET EXPLOSION #
	LDA NXROOT	;GET RANDOM NUMBER
	JSR STRNG
	JSR CLRINT	;DISABLE SWITCH READING
	LDA I,8		;HIT MADE, RESTORE SHOT USED (TO MAX OF 9)
	CMP RSHOTS
	BCC 1$
	INC RSHOTS
1$:	PLA
	TAX
	CLC		;ADD TARGET VALUE TO SCORE
	SED
	LDA TVAL
	BNE 5$
	LDA I,1		;IN CASE A TIE BETWEEN A HIT & TVAL GOING TO "0"
5$:	ADC SCRVAL
	CPX I,1		;CENTER LASER
	BEQ 6$		;YES, NO EXTRA POINTS
	CLC
	ADC I,2		;20 POINTS MORE FOR SIDE LOSERS
6$:	STA SCRVAL
	CLD
	JSR DISSHT	;DISPLAY SHOTS LEFT
	LDY I,2
	JSR SNDHDL	;START EXPLOSION SOUND
NOTEST:	JSR SCORE		;UPDATE SCORE
EMAIN:	JMP LOOP

LASRST:	LDY I,7		;LASER SOUND RESET
	BNE SNDGO
LASFYR:	LDY I,8		;FIRE LASER SOUND
SNDGO:	JMP SNDHDL	;RETURN FROM SNDHDL

CK2:	.BYTE 0		;CHECKSUM FOR 2ND 1K BLOCK

COINRT:	BIT COYN
	BMI 1$
	LDA ZERO
	CMP I,40.
	BCC ECOINR
	LDA I,80
	STA COYN
	RTS
1$:	BVS 2$
	LDA ONE
	CMP I,19.
	BCC ECOINR
	LDA I,0C0
	STA COYN
	RTS
2$:	LDA ZERO
	CMP I,40.
	BCS VLDCN
ECOINR:	RTS
VLDCN:	LDA I,80
	STA COYN
	LDA A,OPTB
	LSR
	LSR
	LSR
	LSR
	AND I,3
	TAX
	LDA AX,COINCV
	BEQ EVALCN
	CLC
	ADC CREDIT
	STA CREDIT
EVALCN:	RTS

STARS:	LDA I,4
	STA R0
	LDY PTRS
	BMI 4$		;1ST TIME, NO LAMPS ON
1$:	LDA AY,STRFLD
	JSR CLRBIT
	DEY
	DEC R0
	BNE 1$
	STY PTRS
	LDA I,4
	STA R0
	LDY PTRS
	BPL 3$
4$:	LDY A,ESTRFL
	STY PTRS
3$:	LDA AY,STRFLD
	JSR SETBIT
	DEY
	DEC R0
	BNE 3$
STAR2:	BIT STAR11
	BPL 1$
	INC STAR11
	BMI 3$
	LDY A,ESFLD1
	STY PTRS1
	BPL 7$
1$:	LDY PTRS1
	LDA AY,SFLD1
	JSR CLRBIT
	DEC PTRS1
7$:	LDY PTRS1
	BPL 2$
	LDA NXROOT
	AND I,7
	EOR I,0FF
	STA STAR11
	BMI 3$
2$:	LDA AY,SFLD1
	JSR SETBIT
3$:	BIT STAR12
	BPL 4$
	INC STAR12
	BPL 5$
	RTS
5$:	LDY A,ESFLD2
	STY PTRS2
	BPL 8$
4$:	LDY PTRS2
	LDA AY,SFLD2
	JSR CLRBIT
	DEC PTRS2
8$:	LDY PTRS2
	BPL 6$
	LDA NXROOT
	LSR
	AND I,7
	EOR I,0FF
	STA STAR12
	RTS
6$:	LDA AY,SFLD2
ESTARS:	JMP SETBIT	;RETURN FROM SETBIT

TARGET:	BIT HOLD		;TEST FOR HOLD POSITION
	BPL TG1			;NO
	INC HOLD
	BPL 3$			;HOLD COMPLETED
	RTS			;HOLD NOT FINISHED
3$:	LDA ROOT		;SET NEW ROUTE HOLD COMPLETE
	LDX I,5
2$:	CMP AX,FRMTBL
	BNE 1$
	LDA AX,TOTBL
	JMP TGET
1$:	DEX
	BPL 2$
	AND I,7			;CLEAR BIT3
TGET:	JSR TARSET	;INITIALIZE NEW TARGET RUN
TG2:	STY PTR
TG3:	JMP SETTAR	;SET TARGET PICTURE ON, RETURN VIA SETTAR
TG1:	LDY PTR
	JSR CLRTAR	;CLEAR TARGET PICTURE
2$:	INY
	LDA NY,TPTR
	BPL TG2
	CMP I,-1		;TEST FOR HOLD POSITION
	BEQ 1$			;NO
	CMP I,-2
	BNE 3$
	LDA I,-4
	BNE 7$
3$:	LDA I,-2
7$:	STA HOLD		;STORE HOLD COUNT
	RTS
1$:	LDA ROOT		;GET CURRENT ROUTE #
	CMP I,0A
	BNE 4$
	LDA I,2		;A->2
	JMP TGET
4$:	CMP I,0D
	BNE 5$
	LDA I,5		;D->5
	JMP TGET
5$:	AND I,4
	BNE 6$			;ROOT IN 4-7 RANGE
	LDA NXROOT		;ROOT IN 0-3 RANGE
	AND I,3			;SELECT ROUTE RANGE 0-3
	ORA I,0C		;SET RANGE C-F
	JSR SPECRT		;TEST ROUTE #
	JMP TGET
6$:	LDA NXROOT		;SELECT ROUTE RANGE 0-3
	AND I,3
	ORA I,8			;SET RANGE 8-B
	JSR SPECRT		;TEST ROUTE #
ETRAG:	JMP TGET

TARSET:	STA ROOT
	ASL
	TAX
	LDA AX,ROTSEL		;SET-UP NEW ROUTE PTR
	STA TPTR
	LDA AX,ROTSEL+1
	STA TPTR+1
	LDY I,0			;SET-UP NEW TARGET POS.
	LDA NY,TPTR
	STA G1		;GUN # NEEDED TO MAKE HIT ON TARGET STRING
	BMI 3$
2$:	INY
	LDA NY,TPTR
	STA HIT1
	INY
	LDA NY,TPTR
	STA EXNUM1
	BPL 1$
	EOR I,0FF
	STA EXNUM1
	BPL 3$
1$:	INY
	LDA NY,TPTR
	STA G2
	INY
	LDA NY,TPTR
	STA HIT2
	INY
	LDA NY,TPTR
	STA EXNUM2
3$:	INY
	RTS

SETTAR:	LDA I,80
	BNE SCTAR
CLRTAR:	LDA I,0
SCTAR:	STA SETFLG
	LDA NY,TPTR
	STA TARPOS
	TAX
	LDA AX,INDTBL
	BIT SETFLG
	BPL 1$
	JSR SETBIT
	JMP 2$
1$:	JSR CLRBIT
2$:	LDA NY,TPTR
	CMP I,22.
	BCC 4$
	RTS
4$:	INY
	LDA NY,TPTR
	STA TPOSB
	TAX
	LDA AX,INDTBL
	BIT SETFLG
	BPL ESCTAR
	JMP SETBIT	;RETURN VIA SETBIT
ESCTAR:	JMP CLRBIT	;RETURN VIA CLRBIT

	;(X)= NUMBER TO BE DISPLAYED IN "HIT VALUE"
TVDISP:	LDA AX,DIGIT
	LDY I,TDIGIT
	JSR STRNG
	LDY I,TZ0
ETVDIS:	JMP SSTRNG	;ON, RETURN VIA SSTRNG

PXYSET:	LDX I,0
	BIT HSCOR1
	BVS 1$
	INX
1$:	LDY ZX,P1TARG
EPXYSE:	RTS

TSPCN:	.BYTE 0C0,90	;SLOW,FAST TARGET STEP COUNT
TVSTRT:	.BYTE 5,7	;50,70 TARGET VALUE
TVUPDA:	.BYTE 24.,18.	;SLOW,FAST T.V. UPDATE TIME COUNT

FRMTBL:	.BYTE 0F,8,0C,0E,0B,9
TOTBL:	.BYTE 0,7,6,4,1,3

	;WEIGHTED SELECTION OF SIDE GUN TARGET ROUTES
	;(A) = SELECTED ROUTE
SPCRT1:	LDY I,1	;START-UP FLAG
	BNE SPERT1
SPECRT:	LDY I,0	;NOT START-UP
SPERT1:	LDX I,3
2$:	CMP AX,SPCROT	;SIDE ROUTE SELECTED?
	BEQ 3$		;YES
	DEX
	BPL 2$
	LDX SYDEGN
	CPX I,3		;= WEIGHT FACTOR?
	BCS 4$		;YES
	INC SYDEGN
	RTS
3$:	LDX I,0		;CLEAR CURRENT FACTOR
	STX SYDEGN
	RTS
4$:	CPY I,1		;START-UP?
	BNE 5$		;NOT
	LDY LRTC	;SECLECT ROUTE 1 OR 6
	BMI 6$
	LDA I,1		;SELECT ROUTE 1
	BNE 3$
6$:	LDA I,6		;SELECT ROUTE 6
	BNE 3$
5$:	AND I,4		;ROUTE C-F?
	BEQ 7$		;NO, ROUTE 8-B
	LDA I,0E		;SELECT ROUTE E
	BNE 3$
7$:	LDA I,9	;SELECT ROUTE 9
	BNE 3$		;END SPECRT & SPCRT1

SCORE:	BIT SCRSND
	BPL 6$
	RTS
6$:	LDA AUDIO
	AND I,4		;SCORE SOUND OFF?
	BNE 3$		;YES
	LDA I,0F0
	STA SCRSND
	BIT BONFLG
	BPL 7$
	BIT TENCNT
	BPL 7$
	INC TENCNT
	LDY TENCNT
	CPY I,-4	;FOR 100 POINTS,-1 FOR 300
	BNE 7$
	LDY I,BONIS
	JSR CSTRNG	;"BONUS" OFF
7$:	LDY I,6		;SCORE SOUND OFF
	JMP SNDHDL	;RETURN VIA SNDHDL
3$:	LDA SCRVAL
	BNE 4$
	RTS
4$:	BIT TFLG
	BVS 8$
	RTS
8$:	LDA TFLG
	AND I,0BF
	STA TFLG
	BIT TACT
	BVC 5$
	RTS
5$:	LDA I,0D8	;SCORE SOUND ON & TIMER SET
	STA SCRSND
	BIT BONFLG
	BPL 11$
	BIT TENCNT
	BPL 1$
	LDY I,3		;SCORE SOUND ON
	JMP SNDHDL	;RETURN VIA SNDHDL
1$:	LDY I,BONIS
	JSR SSTRNG	;"BONUS" ON
	LDY I,-9	;FOR 100 POINTS,-3 FOR 300
	STY TENCNT
11$:	LDY I,3
	JSR SNDHDL
	BIT FREE	;FREE GAME BONUS, BUT NO POINTS
	BPL 9$
	DEC SCRVAL
	RTS
9$:	JSR PXYSET
	SED
	SEC
	LDA SCRVAL
	SBC I,1
	STA SCRVAL
	CLC
	LDA I,1		;+1 TO SCORE
	ADC ZX,SCOR1
	STA ZX,SCOR1
	STA ZX,TSCOR1	;COPY SCOR1 &/OR 2
	BCC 2$
	LDA ZX,HSCOR1
	EOR I,80
	STA ZX,HSCOR1
	BMI 2$
	LDA I,80	;SET WRAP FLAG
	STA ZX,WRAP
2$:	LDA ZX,HSCOR1
	STA ZX,THSCR1	;COPY HSCOR1 &/OR 2
	CLD
	INC ZX,HIGHS	;KEEP TOTAL SCORE
	BNE SCRUP
	INC ZX,HIGHSC
SCRUP:	LDY I,PZ1
	LDA SCOR1
	CMP I,0BB
	BNE 1$
	JSR CSTRNG
	BMI 2$
1$:	JSR SSTRNG
2$:	LDY I,PZ2
	LDA SCOR2
	CMP I,0BB
	BNE 12$
	JSR CSTRNG
	BMI 13$
12$:	JSR SSTRNG
13$:	LDA HSCOR1
	STA SPLDZ1
	LDA HSCOR2
	STA SPLDZ2
	LDA SCOR2	;P2 SCORE
	LSR
	LSR
	LSR
	LSR
	TAX
	BNE 3$
	BIT SPLDZ2
	BMI 4$
	LDX I,0B
	BNE 4$
3$:	LDA I,80
	STA SPLDZ2
4$:	LDY I,P2M		;P2 MSD
	JSR DGOUT
	LDA SCOR2
	AND I,0F
	TAX
	BNE 5$
	BIT SPLDZ2
	BMI 6$
	LDX I,0B
	BNE 6$
5$:	LDA I,80
	STA SPLDZ2
6$:	LDY I,P2L		;P2 LSD
	JSR DGOUT
	LDA SCOR1	;P1 SCORE
	LSR
	LSR
	LSR
	LSR
	TAX
	BNE 7$
	BIT SPLDZ1
	BMI 8$
	LDX I,0B
	BNE 8$
7$:	LDA I,80
	STA SPLDZ1
8$:	LDY I,P1M		;P1 MSD
	JSR DGOUT
	LDA SCOR1
	AND I,0F
	TAX
	BNE 9$
	BIT SPLDZ1
	BMI 10$
	LDX I,0B
	BNE 10$
9$:	LDA I,80
	STA SPLDZ1
10$:	LDY I,P1L		;P1 LSD
	JSR DGOUT
STDISP:	LDY I,P1H
	LDA I,0
	BIT HSCOR1
	BPL 1$
	LDA I,0C0
1$:	JSR STRNG
2$:	LDY I,P2H
	BIT HSCOR2
	BPL ESCRUP
	JMP SSTRNG	;RETURN VIA SSTRNG
ESCRUP:	JMP CSTRNG	;RETURN VIA CSTRNG

DGOUT:	LDA AX,DIGIT
	JMP STRNG		;RETURN VIA STRNG
PLYRON:	LDY I,PL2
	BIT HSCOR1
	BVC 1$		;PLAYER 2 ON
	JSR CSTRNG	;PLAYER 2 OFF
	LDY I,PL1	;PLAYER 1 ON
	JMP SSTRNG	;RETURN VIA SSTRNG
1$:	JSR SSTRNG
	LDY I,PL1	;PLAYER 1 OFF
EPLYON:	JMP CSTRNG	;RETURN VIA CSTRNG

DSHOTS:	LDA RSHOTS		;X=INDEX TO LACT"X"
	BNE 1$
	SEC			;CARRY =1 (SET) IF NO SHOTS LEFT
	RTS
1$:	DEC RSHOTS
DISSHT:	LDY I,SDIGIT	;OUTPUT NEW "SHOTS LEFT" VALUE
	TXA
	PHA
	LDX RSHOTS
	JSR DGOUT
	PLA
	TAX
	CLC
DS2:	RTS

;COIN TO CREDIT CONVERSION TABLE
;1 CN/2 CR (1 CN/PLYR), 1 CN/4 CR (1 CN/GAME), 1 CN/1 CR ( CN/PLYR), FEEE
COINCV:	.BYTE 2,4,1,0

BITPAN:	.BYTE 80,40,20,80		;INSTRUMENT LIGHT PATTERN
BIT:	.BYTE 80,40,20,10,8,4,2,1	;ROUTE BIT PATTERNS
SPCROT:	.BYTE 1,6,9,0E		;SIDE GUN ROUTES


ROTSEL:	.WORD ROT0,ROT1,ROT2,ROT3	;ALL MAYBE SELECTED FOR A START
	.WORD ROT4,ROT5,ROT6,ROT7
	.WORD ROT8,ROT9,ROTA,ROTB	;ROUTE 4-7 MUST SELECT ONE OF THESE
	.WORD ROTC,ROTD,ROTE,ROTF	;ROUTE 0-3 MUST SELECT ONE OF THESE

;ROUTE TABLES - 1ST 2  BYTES SPECIFIES WHICH LASERS CAN HIT TARGET,
;NEXT TWO BYTES SPECIFY CONTACT POINT BY ROUTE & LIGHT NUMBER
	.RADIX 10
	; -1=END ROUTE
	; -2=END ROUTE & HOLD
	; -3=END ROUTE & HOLD WITH LAMPS ON
ROT0:	.BYTE 1,10,-3		;GUN1,T.POS1,EX1,GUN2,TPOS2,EX2
	.BYTE 22,23,24,25,26,27,28,29,30,31,8,80,10,82,-1
ROT1:	.BYTE 0,1,0,1,10,2
	.BYTE 0,72,1,73,2,74,3,75,7,79,10,82,-1
ROT2:	.BYTE 0,35,6,1,9,2
	.BYTE 32,33,34,35,36,37,38,39,40,6,78,9,81,-1
ROT3:	.BYTE 1,9,-3
	.BYTE 4,76,5,77,9,81,-1
ROT4:	.BYTE 1,11,-3
	.BYTE 17,89,13,85,11,83,-1
ROT5:	.BYTE 2,48,^H0C,1,11,2
	.BYTE 47,48,49,50,51,52,53,54,55,14,86,11,83,-1
ROT6:	.BYTE 2,20,4,1,12,2
	.BYTE 21,93,20,92,19,91,18,90,15,87,12,84,-1
ROT7:	.BYTE 1,12,-3
	.BYTE 71,70,69,68,67,66,65,64,63,62,16,88,12,84,-1
ROT8:	.BYTE -1		;NO HIT POINT THIS ROUTE
	.BYTE 10,82,8,80,31,30,29,28,27,26,25,24,23,22,-2
ROT9:	.BYTE 0,2,-1
	.BYTE 10,82,7,79,3,75,2,74,1,73,0,72,-3
ROTA:	.BYTE 0,42,-9
	.BYTE 9,81,6,78,40,39,38,37,46,45,44,43,42,41,-1
ROTB:	.BYTE -1		;NO HIT POINT THIS ROUTE
	.BYTE 9,81,5,77,4,76,-3
ROTC:	.BYTE -1		;NO HIT POINT THIS ROUTE
	.BYTE 11,83,13,85,17,89,-3
ROTD:	.BYTE 2,56,^H0F5	;(-A)
	.BYTE 11,83,14,86,55,54,53,52,61,60,59,58,57,56,-1
ROTE:	.BYTE 2,19,-5
	.BYTE 12,84,15,87,18,90,19,91,20,92,21,93,-3
ROTF:	.BYTE -1		;NO HIT POINT THIS ROUTE
	.BYTE 12,84,16,88,62,63,64,65,66,67,68,69,70,71,-2
	.RADIX 16

CK3:	.BYTE 0		;CHECKSUM FOR 3RD 1K BLOCK

P2Z:	ROUTE .J,2,.J,1,.H,1,.H,2
	ROUTE .H,3,.J,3
P1Z:	ROUTE .V,2,.U,1,.U,2
	ROUTE .U,3,.U,4,.V,3
P1HD:	ROUTE .Z,4,.Z,1
P2HD:	ROUTE .T,4,.T,1
INDTBL:	ROUTE .Z,9,.Z,8,.Z,10,.X,12,.V,16
	ROUTE .T,16,.V,14,.V,13,.U,12,.T,15
	ROUTE .T,14,.N,15,.S,14,.L,15,.L,14
	ROUTE .S,13,.S,12,.L,16,.M,13,.M,12
	ROUTE .J,9,.J,8,.T,7,.U,8,.U,9
	ROUTE .U,10,.V,8,.W,7,.W,8,.W,9
	ROUTE .X,9,.X,13,.Z,14,.Z,13,.Z,12
	ROUTE .Y,12,.Y,13,.Y,14,.X,14,.V,15
	ROUTE .U,15,.Z,15,.Z,16,.Y,16,.X,16
	ROUTE .Y,15,.X,15,.H,13,.H,12,.H,11
	ROUTE .J,11,.J,12,.J,13,.K,11,.K,12
	ROUTE .K,13,.H,14,.H,15,.H,16,.J,16
	ROUTE .J,15,.J,14,.M,14,.L,11,.M,11
	ROUTE .M,10,.L,10,.N,11,.N,10,.N,9
	ROUTE .N,7,.N,6
IND22:	ROUTE .Y,9,.Y,8,.Y,10,.V,12,.U,16
	ROUTE .R,16,.U,14,.U,13,.R,12,.R,15
	ROUTE .R,14,.M,15,.N,14,.K,15,.K,14
	ROUTE .N,13,.N,12,.K,16,.L,13,.L,12
EINDTB:	ROUTE .H,9,.H,8

GVR:	ROUTE .T,5,.U,5				;0E,SET/CLR
PLYR1:	ROUTE .V,4,.W,5,.X,5,.Y,4,.R,3		;14,SET/CLR
PLYR2:	ROUTE .J,4,.K,3,.M,3,.N,3,.P,1		;16,SET/CLR
REDY:	ROUTE .K,6,.K,7,.L,6,.M,6,.L,7		;18,SET/CLR
EXP0:	ROUTE .X,11,.Y,11,.Z,11			;0,SPEC0
EXP1:	ROUTE .N,16,.M,16,.S,16			;2,SPEC2
EXP2:	ROUTE .H,10,.J,10,.K,10			;4,SPEC4
EXP3:	ROUTE .Y,12				;6
EXP4:	ROUTE .Z,16				;8
EXP5:	ROUTE .H,14				;0A
EXP6:	ROUTE .H,12				;0C
INSP1:	ROUTE .P,7,.P,6,.P,3			;10,SPEC8
INSP2:	ROUTE .R,4,.R,7,.R,8			;12,SPEC0A

;STARFIELD ROUTES
STRFLD:	ROUTE .W,16,.W,16,.P,16,.P,16
	ROUTE .W,15,.W,15,.P,15,.S,4
	ROUTE .W,14,.T,6,.P,14,.S,6
	ROUTE .W,13,.T,8,.P,13,.S,7
	ROUTE .W,12,.T,9,.P,12,.R,9
	ROUTE .W,11,.T,10,.P,11,.R,10
	ROUTE .W,10,.T,11,.P,10,.R,11
ESTRFL:	.BYTE ESTRFL-STRFLD-1
SFLD1:	ROUTE .X,6,.X,7,.X,8,.V,6,.V,7
	ROUTE .V,9,.V,10,.V,11
ESFLD1:	.BYTE ESFLD1-SFLD1-1
SFLD2:	ROUTE .N,4,.N,5,.M,8,.S,8,.S,9
	ROUTE .S,10,.S,11
ESFLD2:	.BYTE ESFLD2-SFLD2-1
;LASER ROUTES
LSTRTS:	.BYTE 7,6,7	;BYTE COUNT FOR LASER STRINGS
GTBL:	.WORD LAZER1,LAZER2,LAZER3
LAZER1:	ROUTE .X,10,.Y,7,.Y,6,.Y,5,.W,6
	ROUTE .U,7,.U,6,.V,5
LAZER2:	ROUTE .S,15,.R,13,.T,13,.T,12,.U,11
	ROUTE .P,9,.P,8
LAZER3:	ROUTE .K,9,.K,8,.L,9,.L,8,.M,9
	ROUTE .M,7,.N,8,.S,5

CLRBIT:	STA R1
	LDA I,0
	STA BITFLG
	BEQ DOBIT
	;(A)=ROW,LAMP BYTE
	;USES X & R0, AND TURNS LAMP BIT ON
	;XF=XI, YF=YI, AF=AI
SETBIT:	STA R1
	LDA I,80
	STA BITFLG
DOBIT:	TXA
	PHA
	LDA R1
	AND I,7
	TAX
	LDA AX,BIT	;GET BIT PATTERN
	PHA		;STACK IT
	LDA R1
	LSR		;/8 TO GET INDEX
	LSR
	LSR
	TAX
	PLA		;RETRIEVE BIT PATTERN
	BIT BITFLG
	BMI 1$		;SET IT
	EOR I,0FF
	AND ZX,ARRAY
	JMP 2$
1$:	ORA ZX,ARRAY	;SET BIT
2$:	STA ZX,ARRAY
	PLA
	TAX
	LDA R1
ESETBI:	RTS

;(A) = RANDOM NUMBER
RAND:	ASL NXROOT
	ROL POLYH
	BPL 1$
	INC NXROOT
1$:	LDA NXROOT
	AND I,2
	BEQ 2$
	LDA NXROOT
	EOR I,1
	STA NXROOT
2$:	LDA POLYH
	ORA NXROOT
	BNE 3$
	INC NXROOT
3$:	RTS

STRTIN:	LDA A,CPOS	;CLEAR INTERRUPTS
	LDA I,SAMP
	STA A,BTNT	;START SAMPLE OF SWITCH INPUTS
	CLI
	RTS

;CLEARS ALL SWITCH INTERRUPT OPS (IRQ)
CLRINT:	LDA I,80
	STA SWITCH
	STA SWITCH+1
	STA SWITCH+2
ECLRIN:	STA A,CPOS	;CLEAR INT. ENBLE PA7
	LDA A,CLRITI	;CLEAR INT. ENABLE SWITCH I.T.
	LDA A,CPOS	;CLEAR INTERRUPT FLAG
	SEI		;LOCKOUT IRQ
	RTS

;IRQ ASSUMES THAT RADIO- BIT7 IS SWITCH 3(RIGHTMOST,LOWEST FREQ.)
;BIT6 IS SWITCH 2 (CENTER, MIDDLE FREQ.), BIT5 IS SWITCH 1 (LEFT,HIGHEST FREQ.)

IRQ:	PHA
	LDA A,CPOS	;CLEAR INT. FLAGS
	TYA
	PHA
	TXA
	PHA
	LDA I,SAMP
	STA A,BTNT
	LDX I,2
	LDY A,RADIO
1$:	TYA
	AND I,D.D	;MASK BITS
	CMP AX,SWTLST
	BNE 2$
	LDA ZX,SWITCH
	BMI 3$
	CMP I,4		;GOOD COUNT
	BCS FOUND
	INC ZX,SWITCH
	BNE 3$
2$:	LDA I,0
	STA ZX,SWITCH
3$:	DEX
	BPL 1$
ENDIT:	PLA
	TAX
	PLA
	TAY
	PLA
	RTI
FOUND:	LDA ZX,LACT1
	ORA I,40
	STA ZX,LACT1
	LDA I,80
	STA SWITCH
	STA SWITCH+1
	STA SWITCH+2
EIRQ:	BMI ENDIT

SWTLST:	.BYTE A.A,B.B,C.C	;SWITCH CODES- LEFT,CENTER,RIGHT

NMIC:	LDA I,0		;COIN SAMPLING SECTION
	BIT A,COIN	;TEST COIN 1 OR 0:1=>>COIN PRESENT
	BPL 14$		;COIN NOT PRESENT
	STA ZERO	;CLEAR 0'S COUNT
	INC ONE		;INCREMENT 1'S COUNT
	BNE 15$
14$:	STA ONE		;CLEAR 1'S COUNT
	INC ZERO	;INCREMENT 0'S COUNT
15$:	CLI
	LDA TSTCNT
	BNE NMIB
	LDA I,17.
	STA TSTCNT
	LDA TSTWRD	;LOOP TEST WORD
	EOR I,BPATT
	BEQ NMIB
	;INSUFFICIENT PROGRAM RESPONSE *******************************************
NMIA:	LDA I,4		;STOP NMI INTERRUPT TIMER
	STA A,TNIT8
23$:	JMP 23$		;WAIT FOR WATCHDOG RESET
NMIB:	DEC TSTCNT
	LDA LRTC
	BNE 10$
	LDX I,4
7$:	LDA ZX,REDYTM
	BPL 16$
	INC ZX,REDYTM
16$:	DEX
	BPL 7$
10$:	LDA TARSTP
	BEQ 19$
	DEC TARSTP
19$:	LDA STRSTP
	BEQ 20$
	DEC STRSTP
20$:	BIT SCRSND
	BPL 18$
	INC SCRSND
18$:	LDA I,0C1
	STA TFLG
	JSR RAND
TSTEP:	LDX I,2
11$:	LDA ZX,LSTEP1
	BPL 12$
	INC ZX,LSTEP1
	BMI 12$
	LDA I,40
	STA ZX,LSTEP1
12$:	DEX
	BPL 11$
	BIT TACT
	BPL ENMIC
	BVS ENMIC
	LDA TVCNT
	ORA TVCNT+1
	BEQ ENMIC
	DEC TVCNT
	BNE ENMIC
	DEC TVCNT+1
ENMIC:	JMP ENMI
	.=3C00		;SET PC TO LAST PROM SLOT

	;TEST # OF LAMPS ON & C=1 IF TOO MANY
TSTLNM:	LDY I,-9.	;-10. FOR 2 TARGETS,-9 FOR 1
	LDA ZX,ARRAY
2$:	BEQ TSTONE
	LSR
	BCC 2$
	INY
	BCS 2$
TSTONE:	LDA ZX,ARRAY+1
4$:	BEQ 3$
	LSR
	BCC 4$
	INY
	BPL ETSTLN
	BCS 4$
3$:	CLC
ETSTLN:	RTS

;NMI- WITH COUNT OF 97. & /8 I.T. THERE IS 781+ USEC BETWEEN NMI'S WORST CASE
NMI:	PHA
	TXA
	PHA
	TYA
	PHA
	LDA I,NTYME
	STA A,NMIT	;RESET TIMER
	TSX		;GET STACK POINTER
	LDA ZX,ARRAY+6	;PCU -> A
	CMP I,30	;30<= PCU
	BCC 1$		;NO
	CMP I,40	;40 > PCU
	BCC 4$
1$:	JMP NMIA	;HOLD FOR WATCHDOG RESET )))))))))))))))))))))))))))))))))))))))

4$:	INC ROW
	LDA ROW
	AND I,0F
	ASL
	TAY
	TXA
	BPL 3$
	LDA BADLOW
	BNE 2$
	BEQ 6$
3$:	LDA BDLOWL
	BNE 2$
6$:	BIT A,TESTSW
	BVC 19$
2$:	LDA ZX,ARRAY+4
	AND I,8		;TEST DECIMAL BIT IN CCR
	BEQ 19$
	LDY I,-5
	JSR TSTONE	;CHECK FOR MORE THAN 4 BITS
	LDA I,0
	BCS 20$		;TOO MANY BITS
	LDA ZX,ARRAY+1
20$:	PHA
	PHA
	JMP 5$
19$:	TYA
	TAX
	JSR TSTLNM
	LDA I,0
	BCS 21$
	LDA ZX,ARRAY
	PHA
	LDA ZX,ARRAY+1
	PHA
	JMP 5$
21$:	PHA
	PHA
5$:	STA A,WDOG	;PULSE WATCHDOG
	LDA I,0	;CLEAR CATHODE DRIVERS
	STA A,COL1
	STA A,COL9
	LDA ROW		;SET NEXT ANODE
	AND I,0F
	STA A,ANODE
	PLA
	STA A,COL9
	PLA
	STA A,COL1
	INC LRTC	;RTC SECTION #######################################
	BNE 10$
	INC URTC	;###################################################
10$:	BIT A,TESTSW
	BVS 11$
	JMP NMIC
11$:	LDA I,0C1
	STA TFLG
ENMI:	PLA
	TAY
	PLA
	TAX
	PLA
	RTI

START:	CLD
	LDA I,0FF	;SET-UP PIA'S B6532 & A6532,CATHODE CONTROL
	STA A,BDDRB
	STA A,ADDRB
	LDA I,1F	;SOUND CONTROL
	STA A,ADDRA
	LDA I,1C
	STA A,AUD	;ALL SOUNDS OFF
	LDA I,0		;CLEAR CATHODES (OFF)
	STA A,BPB
	STA A,APB
	;START SELF-TEST ^^^^^^^^^^^^^^^^^^^^^^^^^^
	;TEST NMI INTERVAL TIMER
	LDA I,16.
	STA A,TNIT8	;IT/8,NO INTERRUPT
	LDX I,25.	;SET-UP DELAY COUNT
1$:	DEX		;DELAY
	BNE 1$
	LDA A,RNMIT	;GET IT INT. FLAG
	BMI RAMTST	;FLAG SET, TIMER OK
	LDA I,0E	;UFO SOUND ON
	STA A,AUD
2$:	STA A,WDOG	;PULSE WATCHDOG
	JMP 2$
RAMTST:	LDY I,0		;INIT. CODE TO "RAM OK"
	LDX I,0
3$:	TXA
	STA ZX,ARRAY
	STA A,WDOG
	DEX
	BNE 3$
RAMCYC:	TXA
	CMP ZX,ARRAY
	BNE ERFF
RAMRE:	STA A,WDOG
	DEX
	BNE RAMCYC
ERAM:	TXA		;CLEAR ALL RAM JUST IN CASE
3$:	STA ZX,ARRAY
	STA A,WDOG
	DEX
	BNE 3$
	LDX I,0FF	;SET-UP STACK POINTER PER RAM TEST RESULTS
	TYA
	BEQ SETSTK	;ALL RAM OK
	BPL UPONLY		;UPPER ONLY
	LDA I,1		;SCORE SOUND ON
	STA A,AUD
	TYA
	ASL
	BEQ LWONLY	;LOWER ONLY
;ALL RAM BAD, & NO DISPLAY
5$:	INC ARRAY	;READ/WRITE PULSES TO RAM CHIPS
	INC ARRAY+80
	STA A,WDOG	;PULSE WATCH DOG
	JMP 5$
ERFF:	TXA
	BPL 1$
	TYA
	ORA I,40
	TAY
	BNE RAMRE
1$:	TYA
	ORA I,80
	TAY
	BNE RAMRE
LWONLY:	TXS		;LOWER RAM BAD
	JSR ONLYLW
ONLYLW:	JSR STRTNM
4$:	INC ARRAY
	JMP 4$
UPONLY:	LDX I,7F	;UPPER BAD
SETSTK:	TXS		;SET STACK PTR TO SELECTED RAM
	LDA I,0		;SET NOT BAD LOWER FLAG FOR NMI ROUTINE
	PHA
	;START NMI OPS ***********************************************************
	LDA I,128.	;SET SOFTWARE WATCHDOG COUNT
	STA TSTCNT
	JSR STRTNM
	;TEST IRQ INTERVAL TIMER
	LDA I,10.
	STA A,TSIT64	;IT/64, NO INT.
	LDX I,128.	;SET DELAY TIME
1$:	DEX		;DELAY
	BNE 1$
	LDA I,80
	BIT A,RSIT64	;GET INT. FLAG
	BPL 2$
	LDA I,0
2$:	STA TTYM	;SAVE FLAG CONDITION
;START OF CHECKSUM TEST	###############################################
CKROM:	LDA I,0
	STA CKADDR
	STA CKSMER	;INIT TO ROM OK
	LDA I,MAYN&0FF00/100
	STA CKADDR+1
	LDA I,-4
	STA CKCYCL
	LDA I,1
	STA CKMSK	;SET-UP ERROR MASK
2$:	LDY I,0
	LDX I,4
	LDA I,55
1$:	EOR NY,CKADDR
	DEY
	BNE 1$
	INC CKADDR+1
	DEX
	BNE 1$
	TAX
	AND I,0F	;LSB
	BEQ 3$
	JSR CKER
3$:	ASL CKMSK
	TXA
	AND I,0F0	;MSB
	BEQ 4$
	JSR CKER
4$:	ASL CKMSK
	INC CKCYCL
	BMI 2$
;END OF CHECKSUM TEST	######################################################
;START OF LAMP TEST	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SLMP:	LDA I,1C
	STA AUDIO
	LDY I,80
LMP:	BIT A,TESTSW	;TEST FOR SELF-TEST SWITCH
	BVC 2$		;NOT ON
	BIT TFLG
	BVC 1$
	LDA TFLG
	AND I,0BF
	STA TFLG
	LDA LASDEL
	BNE 6$
5$:	LDA I,0E0
	STA LASDEL
	LDA I,0
	STA TLASON
	LDX I,7		;RESET LASER SOUND
	BNE 8$
6$:	INC LASDEL
	BNE 1$
	BIT TLASON
	BVS 5$
	BMI 7$
	LDA I,80
	STA TLASON
	LDA I,1
	STA LASDEL
	LDX I,5		;EXPLOSION OFF
	JSR TSNDH
	LDX I,8		;LASER SOUND ON
	BNE 8$
7$:	LDA I,40
	STA TLASON
	LDA I,1
	STA LASDEL
	LDX I,2		;EXPLOSION ON
8$:	JSR TSNDH
1$:	BIT TFLG
	BPL 3$
	LDA LRTC
	AND I,1F
	BNE 3$
	LDA TFLG
	AND I,7F
	STA TFLG
	TYA
	CLC
	ROR
	BCC 4$
	ORA I,80
4$:	TAY
3$:	LDA URTC
	CMP I,0C0
	BCC 9$
	LDA I,80
	STA LMPTST
9$:	BIT LMPTST	;NO, IS COUNT COMPLETE?
	BPL LMP		;NO, CONTINUE LAMP TEST
	BIT A,OPTA	;TEST FOR EXTENDED LAMP TEST
	BVS LMP
2$:	CLD
	LDY I,0		;ALL SOUNDS OFF
	JSR SNDHDL
	LDA CKSMER
	AND I,30
	BEQ ECKROM	;3RD K OF PROM OK
	LDA I,80
	STA TTYM	;DON'T USE 3RD K PROM FOR SWITCH TEST
;END LAMP TEST	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ECKROM:	JSR CLRINT
	BIT TTYM	;CHECK IT STATE
	BMI 2$		;IT NO GOOD
	JSR STRTIN	;SET SWITCH READ
2$:	LDA I,0
	STA LMPTST
;<<<<<<<<<<<<<<<<<<<<<<<<< CHECKSUM DISPLAY >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	LDA I,P1M
	STA CKMSK
1$:	LDY CKMSK
	CPY I,PZ1
	BEQ 4$
	LDA CKSMER
	AND I,3
	TAX
	LDA AX,DIGIT
	JSR STRNG
	LSR CKSMER
	LSR CKSMER
	INC CKMSK
	INC CKMSK
	BNE 1$
;<<<<<<<<<<<<<<<<<<<<<<<< CHECK FOR UPPER RAM BAD >>>>>>>>>>>>>>>>>>>>>>>>>>
4$:	LDY I,BONIS
	TSX
	BMI 3$
	JSR SSTRNG	;INDICATE BAD UPPER RAM
	JMP SWIT
3$:	JSR CSTRNG	;INDICATE ALL RAM OK
;<<<<<<<<<<<<<<<<<<<<<<<<<< START SWITCH DISPLAY TEST >>>>>>>>>>>>>>>>>>>>>>>>
SWIT:	BIT A,TESTSW
	BVS 2$
	JMP ENSWIT
2$:	LDY I,REDI
	BIT A,COIN
	BMI 1$
	JSR CSTRNG
	LDY I,4		;UFO OFF
	BNE 3$
1$:	JSR SSTRNG
	LDY I,1		;UFO ON
3$:	JSR SNDHDL
DISPLAY:LDA A,OPTB
	AND I,30
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA AX,DIGIT
	LDY I,TDIGIT
	JSR STRNG
	LDY I,TZ0
	LDA A,OPTA
	AND I,20
	BEQ 1$		;SHOW BLANK FOR SHORT GAME
	LDA I,31	;SHOW "1" FOR LONG GAME
1$:	JSR STRNG
LAMP:	LDY I,SDIGIT	;SET Y="SHOTS LEFT" STRING
	BIT TTYM	;CHECK STATE IF IT TIMER
	BPL 3$
	LDA I,0FD	;DISPLAY CODE FOR "0"
	BNE 7$
3$:	LDA LMPTST
	BEQ 1$
	BIT TFLG
	BVC SWIT
	LDA I,0
	STA TFLG
	INC LMPTST
	BNE SWIT
1$:	LDX I,2
2$:	LDA ZX,LACT1
	AND I,40	;TEST FOR SWITCH PUSHED
	BNE 4$		;SWITCH ON
	DEX
	BPL 2$
	LDA I,1		;CODE FOR BLANK DIGIT
7$:	JSR STRNG
	LDY I,6			;SCORE OFF
8$:	JSR SNDHDL
9$:	JMP SWIT
4$:	LDA I,0		;CLEAR SWITCH FLAG
	STA ZX,LACT1
	LDA I,1		;SET TIME-OUT
	STA LMPTST
	LDA AX,DIGIT+1
	JSR STRNG	;DISPLAY SWITCH #
	LDY I,3		;SCORE SOUND ON
	BNE 8$
ENSWIT:	LDX I,0F0		;CLEAR WORKING RAM
	LDA I,0
1$:	CPX I,ROW	;DO NOT ALTER ROW NUMBER OR SOFTWARE WATCHDOG TIMER
	BNE 2$
	DEX
	DEX
2$:	STA ZX,ARRAY
	DEX
	BNE 1$
	STA ARRAY
	JMP MAYN

	;(Y) INDEX TO STRING ADDR. TABLE,YF<>YI
	;AF<>AI, XF<>XI
CSTRNG:	LDA I,0		;AI
	BEQ STRNG
SSTRNG:	LDA I,0FF	;AI
STRNG:	STA SHOLD
	LDA AY,STNGTB
	STA SPTR
	LDA AY,STNGTB+1
	STA SPTR+1
	TYA
	LSR		;/2
	TAY
	LDA AY,STNGCT
	TAY
1$:	LDA NY,SPTR
	AND I,7
	TAX
	LDA AX,BIT	;GET BIT PATTERN
	PHA
	LDA NY,SPTR
	LSR		;/8 TO GET ARRAY INDEX
	LSR
	LSR
	TAX
	PLA
	BIT SHOLD
	BMI 2$		;SET BIT
	EOR I,0FF	;CLEAR BIT
	AND ZX,ARRAY
	JMP 3$
2$:	ORA ZX,ARRAY	;SET BIT
3$:	STA ZX,ARRAY
	ASL SHOLD
	DEY
	BPL 1$
ESTRNG:	RTS

CKER:	LDA CKSMER
	ORA CKMSK
	STA CKSMER
	RTS

	;AUD- I/O WORD
	;BIT4- ATTRACT/SOUND NOT
	;BIT3- "ENABLE NOT" FOR BIT2
	;BIT2- EXPLOSION/"SCORE NOT"
	;BIT1- RESET/"LASER NOT", PULSE & LEAVE "NOT"
	;BIT0- "UFO NOT"
	;SOUND HANDLER: ENTER WITH Y=
	;0- ALL SOUNDS OFF (ATTRACT)
	;1- UFO ON
	;2- EXPLOSION ON
	;3- SCORE ON
	;4- UFO OFF
	;5- EXPLOSION OFF
	;6- SCORE OFF
	;7- LASER ON (RESET),NOTE: DO NOT LEAVE IN THIS CONDITION LONG
	;8- LASER FIRE

TSNDH:	LDA AUDIO
	AND AX,MASK1
	ORA AX,MASK2
	JMP ETSND
SNDHDL:	LDA AUDIO
	AND AY,MASK1
	ORA AY,MASK2
ETSND:	STA A,AUD
	STA AUDIO
ESNDHD:	RTS

STRTNM:	LDY I,80	;ONLY 2 LAMPS/ANODE IN TEST
	SED
	LDA I,0F	;SET-UP ANODE OUTPUT TO DECODER
	STA A,BDDRA
	STA A,EANODE	;ENABLE ANODE DECODERS
	STA A,WDOG
	LDA I,NTYME	;START NMI OPS
	STA A,NMIT
	RTS

	;END SELF-TEST ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

MASK1:	.BYTE 0,0EE,0E2,0E3,0EE,0E7,0E3,0ED,0ED
MASK2:	.BYTE 1C,0,5,0,1,0C,0C,2,0

DIGIT:	.BYTE 0FD,31,6F,7B,0B3,0DB,0DF,71,0FF,0FB,0F7,1	;1 IS FOR BLANK DIGIT,F7='A'
STNGCT:	.BYTE 2,2,2,0,0,0,0,1,2,2,4,4,4,2,5,6,6,6,6,6,6,5,5,1,1
STNGTB:	.WORD EXP0,EXP1,EXP2,EXP3,EXP4,EXP5,EXP6,GVR,INSP1
	.WORD INSP2,PLYR1,PLYR2,REDY,BNUS,TZ,TDIG,SDIG
	.WORD P1MSD,P1LSD,P2MSD,P2LSD,P1Z,P2Z,P1HD,P2HD
P2MSD:	ROUTE .S,2,.T,2,.S,1,.N,1,.N,2
	ROUTE .S,3,.T,3
P2LSD:	ROUTE .L,2,.M,1,.L,1
	ROUTE .K,1,.K,2,.L,3,.M,2
P1MSD:	ROUTE .Y,2,.Z,2,.Y,1,.X,2,.X,3
	ROUTE .Y,3,.Z,3
P1LSD:	ROUTE .W,2,.X,1,.W,1
	ROUTE .V,1,.W,3,.W,4,.X,4
TDIG:	ROUTE .L,5,.M,4,.L,4,.K,4,.J,6
	ROUTE .K,5,.M,5				;1E, SPECIAL
SDIG:	ROUTE .P,4,.P,2,.R,1,.R,2,.R,5
	ROUTE .R,6,.P,5				;20, SPECIAL
BNUS:	ROUTE .Z,7,.Z,6,.Z,5			;1A,SET/CLR
TZ:	ROUTE .J,5,.H,4,.H,5,.H,6
	ROUTE .H,7,.J,7				;1C, SET/CLR

FGTBL:	.BYTE 19,49,79	;BCD 1XX0 WHERE XX IS 1 LESS THAN BONUS LEVEL DESIRED
	.=3FF9
CK4:	.BYTE 0		;CHECKSUM FOR 4TH 1K BLOCK
	.WORD NMI,START,IRQ
	.END
                                                                                                                                                                  